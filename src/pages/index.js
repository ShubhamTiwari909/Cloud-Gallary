import Head from 'next/head'
import { useState, useEffect } from 'react'
import { getId, addTask, updateTask, deleteTask, getData } from '../../firebase/dbOperations'
import { useRouter } from 'next/router'
import Navbar from '../../components/Navbar'
import Search from '../../components/Search'
import Form from '../../components/Form'
import Display from '../../components/Display'



export default function Home({data}) {
  //states
  const [tokenId, setTokenId] = useState("null");
  const [uid,setUid] = useState("")
  const [title, setTitle] = useState("")
  const [task, setTask] = useState("")
  const [priority, setPriority] = useState("")
  const [taskGroup, setTaskGroup] = useState([])
  const [update, setUpdate] = useState(false)
  const [updateId, setUpdateId] = useState(null)
  const [search, setSearch] = useState("");


  const router = useRouter()

  /* Checking if the user is logged in or not. If not, it will redirect to the Login page. */
  useEffect(() => {
    let token = sessionStorage.getItem("Token")
    setTokenId(token)
    if (token) {
      getData(setTaskGroup)
      setUid(sessionStorage.getItem("uid"))
    }
    if (!token) {
      router.push("/login")
    }
  }, [tokenId])


  return (
    <>
      <Head>
        <title>Next Firebase Todo App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* NAVBAR */}
      <Navbar tokenId={tokenId} />

      <main>
        <section className={`grid_2`}>
        {/* ADD TASK FORM */}
          <Form
            update={update}
            setUpdate={setUpdate}
            title={title}
            setTitle={setTitle}
            task={task}
            setTask={setTask}
            priority={priority}
            setPriority={setPriority}
            addTask={(e) => addTask(e,title,setTitle, task, setTask,priority,setPriority, setTaskGroup)}
            updateTask={(e) => {
              updateTask(e,title,setTitle, task, setTask,priority,setPriority, setUpdateId, setUpdate, setTaskGroup, updateId)
              window.scrollTo(0, window.innerHeight)
            }}
          />
          {/* SEARCH FORM */}
          <Search search={search} setSearch={setSearch} />
        </section>

        {/* READ TASKS */}
        <section>
          <Display
            taskGroup={taskGroup}
            setTitle={setTitle}
            setTask={setTask}
            setPriority={setPriority}
            setTaskGroup={setTaskGroup}
            setUpdate={setUpdate}
            setUpdateId={setUpdateId}
            search={search}
            getId={getId}
            deleteTask={deleteTask}
            data={data} />
        </section>
      </main>
    </>
  )
}
